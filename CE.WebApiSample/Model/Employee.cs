namespace CE.WebApiSample.Model{    public class Employee    {        public Guid EmployeeId { get; set; }        public string? FirstName { get; set; }        public string? LastName { get; set; }        public string? Title { get; set; }    }}// 1. Create an MVC API project// 2. Observe the Program.cs Class -> look at the HTTP pipeline, Injectable ( Swagger (open API standards) DbContext, Connection String)// 3. if InMemory -> include EntityFramework In Memory dll reference from nuget// 4. if SqlServer -> Include EntityFramework Sql Server reference from nuget// 5. include for migration of changes in your model -> entityframework.tools from nuget// 6. Create Domain Modesl -> elaborates your real time entity and attributes of real time entity// 7. Ceaate DataAccessClass -> inherit from DBContext, completely work with database in performing CRUD operations with out querying but using ORM (Object Relational Mapping)// 8. Create Controller and decorate controller and route// 9. Define Methods for // 9.1 GET -> select all items / individual items// 9.2 POST -> To create new resources at the server ( Created a request Class-> this is responsible to read the input)// 9.3 PUT -> update the resource by and id, ( here we modified the route with input id and the Update Object responsible for update the input)// 9.4 DELETE -> To remove a resource from the backend// Commonality is that// We have access to datbase context -> Database context has reference to table values-> using LINQ operations we Search, Add, Update, Delete on the table, EF. takes care performign the CRUD operations// based on the object updated in the DBContext// 10.ADD Migration and update migration to impact database with changes